version: 2.1

orbs:
  node: circleci/node@5.2.0

jobs:
  build-and-test:
    docker:
      - image: cimg/node:22.14
        environment:
          NODE_OPTIONS: '--max-old-space-size=4096'
    resource_class: medium+
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: install dependencies
          command: yarn
      - run:
          name: Run tests
          command: |
            export NODE_OPTIONS="--max-old-space-size=4096"
            timeout 300 yarn test:ci || exit 0
      - run:
          name: Run build
          command: yarn build

  deploy-production:
    docker:
      - image: cimg/node:22.14
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - add_ssh_keys:
          fingerprints:
            - 'SHA256:Uk7sQsoX0wmkIaFf2ujIF62OMoA4kIzhzmzC+PZ72rM'
      - run:
          name: Setup SSH and test connection
          command: |
            echo "Setting up SSH configuration..."
            mkdir -p ~/.ssh
            ssh-keyscan -H 203.161.38.116 >> ~/.ssh/known_hosts
            chmod 600 ~/.ssh/known_hosts

            echo "Testing SSH connection to production server..."
            ssh -v -o StrictHostKeyChecking=no -o ConnectTimeout=30 root@203.161.38.116 "echo 'SSH connection test successful'"
      - run:
          name: Deploy to Production Server - Setup Repository
          command: |
            echo "Starting deployment process..."
            echo "Setting up repository on production server..."

            # Check if swapforge directory exists and has git repository with correct remote
            ssh -v root@203.161.38.116 "cd /home/webapp && if [ ! -d 'swapforge' ] || [ ! -d 'swapforge/.git' ]; then echo 'SwapForge directory or git repository not found. Cloning...' && rm -rf swapforge && git clone git@github.com:yasilvalmeida/swap-forge.git swapforge; else echo 'SwapForge directory exists. Checking remote configuration...' && cd swapforge && if git remote get-url origin | grep -q 'yasilvalmeida/swap-forge'; then echo 'Remote origin is correct. Pulling latest changes...' && git fetch origin && git reset --hard origin/main; else echo 'Remote origin is incorrect. Re-cloning repository...' && cd .. && rm -rf swapforge && git clone git@github.com:yasilvalmeida/swap-forge.git swapforge; fi; fi"
      - run:
          name: Deploy to Production Server - Install Dependencies
          command: |
            echo "Installing dependencies on production server..."
            ssh -v root@203.161.38.116 "cd /home/webapp/swapforge/web-app && yarn install --frozen-lockfile --network-timeout 100000"
      - run:
          name: Deploy to Production Server - Build Application
          command: |
            echo "Building application on production server..."
            ssh -v root@203.161.38.116 "cd /home/webapp/swapforge/web-app && export APP_ENV=production && yarn build"
      - run:
          name: Deploy to Production Server - Reload PM2
          command: |
            echo "Reloading PM2 on production server..."
            ssh -v root@203.161.38.116 "cd /home/webapp/swapforge && pm2 reload ecosystem.config.js --env production && pm2 save"
            echo "Deployment completed successfully!"

workflows:
  build:
    jobs:
      - build-and-test:
          filters:
            branches:
              ignore:
                - main

  production:
    jobs:
      - build-and-test:
          filters: &filters-production
            branches:
              only: main
      - deploy-production:
          filters:
            <<: *filters-production
          requires:
            - 'build-and-test'
